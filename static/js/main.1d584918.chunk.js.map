{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodoApp/TodoApp.jsx","App.js","index.js"],"names":["TodoItem","todo","className","type","title","TodoList","todos","map","key","id","ClassNames","completed","TodoApp","useState","setTodos","newTodo","setNewTodo","todoTitle","setTodoTitle","onSubmit","event","preventDefault","placeholder","value","onChange","target","onKeyDown","length","addTodo","htmlFor","href","App","ReactDOM","render","document","getElementById"],"mappings":"oTAGaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oCACE,yBAAKC,UAAU,QACb,2BAAOC,KAAK,WAAWD,UAAU,WACjC,+BAAQD,EAAKG,OACb,4BAAQD,KAAK,SAASD,UAAU,aAElC,2BAAOC,KAAK,OAAOD,UAAU,WCLpBG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,wBAAIJ,UAAU,aACXI,EAAMC,KAAI,SAAAN,GAAI,OACb,wBACEO,IAAKP,EAAKQ,GACVP,UAAWQ,IAAW,CAAEC,UAAWV,EAAKU,aAExC,kBAAC,EAAD,CAAUV,KAAMA,UCTXW,EAAU,WAAO,IAAD,EACDC,mBAAS,IADR,mBACpBP,EADoB,KACbQ,EADa,OAEGD,mBAAS,IAFZ,mBAEpBE,EAFoB,KAEXC,EAFW,OAGOH,mBAAS,SAHhB,mBAGpBI,EAHoB,KAGTC,EAHS,KAiB3B,OACE,oCACE,4BAAQhB,UAAU,UAChB,qCACA,0BAAMiB,SAAU,SAAAC,GAAK,OAAIA,EAAMC,mBAC7B,2BACElB,KAAK,OACLD,UAAU,WACVoB,YAAY,yBACZC,MAAON,EACPO,SAAU,SAAAJ,GAAK,OAAIF,EAAaE,EAAMK,OAAOF,QAC7CG,UAAW,SAAAN,GAAK,OAvBV,SAACA,GACG,UAAdA,EAAMZ,MACRQ,EAAW,CACTP,GAAIH,EAAMqB,OACVvB,MAAOa,EACPN,WAAW,IAGbG,EAAS,GAAD,mBAAKR,GAAL,CAAYS,MAeMa,CAAQR,QAKlC,6BAASlB,UAAU,QACjB,2BAAOC,KAAK,WAAWM,GAAG,aAAaP,UAAU,eACjD,2BAAO2B,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CAAUvB,MAAOA,KAInB,4BAAQJ,UAAU,UAChB,0BAAMA,UAAU,cAAhB,gBAIA,wBAAIA,UAAU,WACZ,4BACE,uBAAG4B,KAAK,KAAK5B,UAAU,YAAvB,QAGF,4BACE,uBAAG4B,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ3B,KAAK,SAASD,UAAU,mBAAhC,sBCpDO6B,MARf,WACE,OACE,6BAAS7B,UAAU,WACjB,kBAAC,EAAD,QCGN8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.1d584918.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\n\nexport const TodoItem = ({ todo }) => (\n  <>\n    <div className=\"view\">\n      <input type=\"checkbox\" className=\"toggle\" />\n      <label>{todo.title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </>\n);\n\nTodoItem.propTypes = {\n  todo: propTypes.objectOf({\n    title: propTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport const TodoList = ({ todos }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li\n        key={todo.id}\n        className={ClassNames({ completed: todo.completed })}\n      >\n        <TodoItem todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: propTypes.arrayOf({\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    completed: propTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport { TodoList } from '../TodoList/TodoList';\n\nexport const TodoApp = () => {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({});\n  const [todoTitle, setTodoTitle] = useState('title');\n\n  const addTodo = (event) => {\n    if (event.key === 'Enter') {\n      setNewTodo({\n        id: todos.length,\n        title: todoTitle,\n        completed: false,\n      });\n\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={event => event.preventDefault()}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={todoTitle}\n            onChange={event => setTodoTitle(event.target.value)}\n            onKeyDown={event => addTodo(event)}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList todos={todos} />\n\n      </section>\n\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          3 items left\n        </span>\n\n        <ul className=\"filters\">\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button type=\"button\" className=\"clear-completed\">\n          Clear completed\n        </button>\n      </footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <section className=\"todoapp\">\n      <TodoApp />\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}